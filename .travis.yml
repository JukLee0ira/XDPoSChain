sudo: required
language: go
go_import_path: github.com/XinFinOrg/XDPoSChain

env:
  global:
    - GOPROXY=https://proxy.golang.org
    - GO111MODULE=on


jobs:
  include:
  # TODO: temporary turn off linting to help fix all the tests. We will turn it back on once the branch is stable
  # - stage: Lint
  #   sudo: false
  #   go: '1.14.x'
  #   git:
  #     submodules: false
  #     script:
  #       - go run build/ci.go lint

  - stage: Tests
    os: linux
    dist: bionic
    go: 1.14.x
    env:
      - GO111MODULE=auto
    name: A-B tests
    script: travis_retry go run build/ci.go test -coverage $(go list ./... | grep "github.com\/XinFinOrg\/XDPoSChain\/[a-b].*")
  - script: travis_retry go run build/ci.go test -coverage $(go list ./... | grep "github.com\/XinFinOrg\/XDPoSChain\/c[a-m].*")
    os: linux
    dist: bionic
    go: 1.14.x
    env:
      - GO111MODULE=auto
    name: C-[a-m] tests
  - script: travis_retry go run build/ci.go test -coverage $(go list ./... | grep "github.com\/XinFinOrg\/XDPoSChain\/c[n-o].*")
    os: linux
    dist: bionic
    go: 1.14.x
    env:
      - GO111MODULE=auto
    name: C-[n-o] tests
  - script: travis_retry go run build/ci.go test -coverage $(go list ./... | grep "github.com\/XinFinOrg\/XDPoSChain\/c[p-z].*")
    os: linux
    dist: bionic
    go: 1.14.x
    env:
      - GO111MODULE=auto
    name: C-[p-z] tests
  - script: travis_retry go run build/ci.go test -coverage $(go list ./... | grep "github.com\/XinFinOrg\/XDPoSChain\/[d-i].*")
    os: linux
    dist: bionic
    go: 1.14.x
    env:
      - GO111MODULE=auto
    name: D-I tests
  - script: travis_retry go run build/ci.go test -coverage $(go list ./... | grep "github.com\/XinFinOrg\/XDPoSChain\/[j-n].*")
    os: linux
    dist: bionic
    go: 1.14.x
    env:
      - GO111MODULE=auto
    name: J-N tests
  - script: travis_retry go run build/ci.go test -coverage $(go list ./... | grep "github.com\/XinFinOrg\/XDPoSChain\/[o-r].*")
    os: linux
    dist: bionic
    go: 1.14.x
    env:
      - GO111MODULE=auto
    name: O-R tests
  - script: travis_retry go run build/ci.go test -coverage $(go list ./... | grep "github.com\/XinFinOrg\/XDPoSChain\/s.*")
    os: linux
    dist: bionic
    go: 1.14.x
    env:
      - GO111MODULE=auto
    name: S tests
  - script: travis_retry go run build/ci.go test -coverage $(go list ./... | grep "github.com\/XinFinOrg\/XDPoSChain\/[t-z].*")
    os: linux
    dist: bionic
    go: 1.14.x
    env:
      - GO111MODULE=auto
    name: T-Z tests
  
  - stage: (Devnet) Build and push image
    if: branch = dev-upgrade
    services:
      - docker
    install: skip
    before_script:
      - docker --version  # document the version travis is using
      - docker build -t xdc-devnet -f cicd/devnet/Dockerfile .
    script:
      - pip install --user awscli # install aws cli w/o sudo
      - export PATH=$PATH:$HOME/.local/bin # put aws in the path
      - eval $(aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin $ECR_BASE_URI) #needs AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY envvars
      - docker tag xdc-devnet:latest $ECR_BASE_URI/$ECR_REPO_NAME:latest # Need ECR_REPO_NAME
      - docker push $ECR_BASE_URI/$ECR_REPO_NAME:latest